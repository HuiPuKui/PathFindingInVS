<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::{ctor}</FUNCTION>
    <DECORATED>??0CGraph@@QEAA@XZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>208</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::ParsingFileCalledMakeBlock</FUNCTION>
    <DECORATED>?ParsingFileCalledMakeBlock@CGraph@@QEAAXXZ</DECORATED>
    <FUNCLINE>189</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>212</LINE>
      <COLUMN>150</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::ParsingFileCalledMakeBlock</FUNCTION>
    <DECORATED>?ParsingFileCalledMakeBlock@CGraph@@QEAAXXZ</DECORATED>
    <FUNCLINE>189</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>213</LINE>
      <COLUMN>150</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::ParsingFileCalledMakeBlock</FUNCTION>
    <DECORATED>?ParsingFileCalledMakeBlock@CGraph@@QEAAXXZ</DECORATED>
    <FUNCLINE>189</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>523</LINE>
      <COLUMN>93</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>540</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>561</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>570</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>572</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>574</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>578</LINE>
      <COLUMN>70</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForBlock</FUNCTION>
    <DECORATED>?AStarForBlock@CGraph@@AEAA?AVCNode@@V2@0HHHAEAV?$vector@NV?$allocator@N@std@@@std@@@Z</DECORATED>
    <FUNCLINE>513</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>648</LINE>
      <COLUMN>53</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>710</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>713</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>714</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>715</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\VSProject\PathFinding\PathFinding\</FILEPATH>
      <FILENAME>Graph.cpp</FILENAME>
      <LINE>748</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>CGraph::AStarForGraph</FUNCTION>
    <DECORATED>?AStarForGraph@CGraph@@QEAA?AV?$vector@NV?$allocator@N@std@@@std@@HHH@Z</DECORATED>
    <FUNCLINE>645</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>